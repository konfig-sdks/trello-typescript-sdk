/*
Trello

This document describes the REST API of Trello as published by Trello.com.
 - <a href='https://trello.com/docs/index.html' target='_blank'>Official Documentation</a>
 - <a href='https://trello.com/docs/api' target='_blank'>The HTML pages that were scraped in order to generate this specification.</a>

The version of the OpenAPI document: 1.0


NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/

import { AxiosRequestConfig } from "axios";
import {
  ActionApi,
  BatchApi,
  BoardApi,
  CardApi,
  ChecklistApi,
  LabelApi,
  ListApi,
  MemberApi,
  NotificationApi,
  OrganizationApi,
  SearchApi,
  SessionApi,
  TokenApi,
  TypeApi,
  WebhookApi,
} from "./api";
import { Configuration, ConfigurationParameters } from "./configuration";
import { TrelloCustom } from "./client-custom";

export class Trello extends TrelloCustom {
  readonly action: ActionApi;
  readonly batch: BatchApi;
  readonly board: BoardApi;
  readonly card: CardApi;
  readonly checklist: ChecklistApi;
  readonly label: LabelApi;
  readonly list: ListApi;
  readonly member: MemberApi;
  readonly notification: NotificationApi;
  readonly organization: OrganizationApi;
  readonly search: SearchApi;
  readonly session: SessionApi;
  readonly token: TokenApi;
  readonly type: TypeApi;
  readonly webhook: WebhookApi;

  constructor(configurationParameters: ConfigurationParameters = {}) {
    super(configurationParameters);
    const configuration = new Configuration(configurationParameters);
    this.action = new ActionApi(configuration);
    this.batch = new BatchApi(configuration);
    this.board = new BoardApi(configuration);
    this.card = new CardApi(configuration);
    this.checklist = new ChecklistApi(configuration);
    this.label = new LabelApi(configuration);
    this.list = new ListApi(configuration);
    this.member = new MemberApi(configuration);
    this.notification = new NotificationApi(configuration);
    this.organization = new OrganizationApi(configuration);
    this.search = new SearchApi(configuration);
    this.session = new SessionApi(configuration);
    this.token = new TokenApi(configuration);
    this.type = new TypeApi(configuration);
    this.webhook = new WebhookApi(configuration);
  }

}
